name: Build and Test

on:
  push:
    branches:
      - 'so-*'
    tags:
      - 'so-*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

#      - name: Install Android SDK and tools
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y wget unzip
#          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
#          sudo mkdir -p /opt/android-sdk/cmdline-tools
#          sudo unzip cmdline-tools.zip -d /opt/android-sdk/cmdline-tools
#          sudo mv /opt/android-sdk/cmdline-tools/cmdline-tools /opt/android-sdk/cmdline-tools/latest
#          echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
#          echo "PATH=$PATH:/opt/android-sdk/cmdline-tools/latest/bin:/opt/android-sdk/emulator:/opt/android-sdk/platform-tools" >> $GITHUB_ENV

      - name: Install Android SDK Components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "system-images;android-30;google_apis_playstore;x86"

      - name: Create Android emulator
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils kmod
          sudo kvm-ok
          avdmanager create avd -n test -k "system-images;android-30;google_apis_playstore;x86" --force
          nohup emulator -avd test -no-snapshot-load -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim &

      - name: Wait for Emulator
        run: adb wait-for-device

      - name: Run connected Android tests
        run: ./gradlew connectedFullDebugAndroidTest

      - name: Run Unit tests
        run: ./gradlew testFullDebugUnitTest

      - name: Build APK
        run: ./gradlew assembleDebug

      - name: Upload Build Artifacts
        if: startsWith(github.ref, 'refs/tags/so-')
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: app/build/outputs/apk/debug/*.apk
